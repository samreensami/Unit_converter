import streamlit as st

st.title("üåç Unit Converter üîÑ")

st.write("### üéâ Welcome to the Unit Converter App!") 
st.markdown("üõ†Ô∏è This app converts units of **Length**, **Weight**, and **Time**. Please select the type of conversion from the dropdown below.üëá")

# User selects a category
category = st.selectbox("üìå Select Category", ["üìè Length", "‚öñÔ∏è Weight", "‚è≥ Time"])

# Define unit conversion options based on the selected category
if category == "üìè Length":
    unit = st.selectbox("üîÅ Select Conversion", ["üìê Kilometers to Miles", "üìè Miles to Kilometers"])
elif category == "‚öñÔ∏è Weight":
    unit = st.selectbox("‚öñÔ∏è Select Conversion", ["üèãÔ∏è Kilograms to Pounds", "üí™ Pounds to Kilograms"])
elif category == "‚è≥ Time":
    unit = st.selectbox("‚è≥ Select Conversion", ["‚è±Ô∏è Seconds to Minutes", "‚è≤Ô∏è Minutes to Seconds", "üï∞Ô∏è Minutes to Hours", 
                                              "‚è≥ Hours to Minutes", "üìÖ Hours to Days", "üåû Days to Hours"])
else:
    unit = None

# Input field for the value to be converted
value = st.number_input("üî¢ Enter the value to convert", min_value=0.0)

# Conversion function
def convert_units(category, value, unit): 
    if category == "üìè Length":
        if unit == "üìê Kilometers to Miles":
            return value * 0.621371
        elif unit == "üìè Miles to Kilometers":
            return value / 0.621371
    elif category == "‚öñÔ∏è Weight":
        if unit == "üèãÔ∏è Kilograms to Pounds":
            return value * 2.20462
        elif unit == "üí™ Pounds to Kilograms":
            return value / 2.20462
    elif category == "‚è≥ Time":
        if unit == "‚è±Ô∏è Seconds to Minutes":
            return value / 60
        elif unit == "‚è≤Ô∏è Minutes to Seconds": 
            return value * 60
        elif unit == "üï∞Ô∏è Minutes to Hours":
            return value / 60
        elif unit == "‚è≥ Hours to Minutes":
            return value * 60
        elif unit == "üìÖ Hours to Days":
            return value / 24
        elif unit == "üåû Days to Hours":
            return value * 24
    return None

# Perform conversion when button is clicked
if st.button("üîÑ Convert Now"):
    if unit and value >= 0:
        result = convert_units(category, value, unit)
        if result is not None:
            st.success(f"‚úÖ The result is **{result:.2f}**")
        else:
            st.error("‚ùå Invalid conversion selected.")
    else:
        st.error("‚ö†Ô∏è Please select a valid category and enter a value.")
